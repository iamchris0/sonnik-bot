import requests
from bs4 import BeautifulSoup as bs
import telebot
import schedule
import time

from app import TOKEN

bot = telebot.TeleBot(TOKEN)


class Info:
    def __init__(self):
        self.chat = 0
        self.chatid = {}
        self.status = {}

    def reminder(self, userid, resp):
        self.chatid[userid] = resp


info = Info()

file = open('dict.txt', 'r')
dic = {}

while True:
    line = file.readline()

    if not line:
        break
    else:
        line = line.replace('\n', '').split('-')
        dic[line[0]] = line[1]

file.close()


# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã start
@bot.message_handler(commands=['start'])
def start(msg):
    info.chat = msg.chat.id
    if msg.chat.id in info.chatid.keys():
        pass
    else:
        info.chatid[msg.chat.id] = False
        info.status[msg.chat.id] = False

    bot.send_message(chat_id=msg.chat.id,
                     text='üí§ –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–º–æ—â–Ω–∏–∫ —á—Ç–µ–Ω–∏—è —Å–Ω–æ–≤!\n\n'
                          '*–°–æ–Ω* - —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–º–∞, '
                          '–∫–æ–≥–¥–∞ –≤—Å–µ —Ç–µ–ª–æ –æ—Ç–¥—ã—Ö–∞–µ—Ç –ø–æ—Å–ª–µ –¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–æ–∫. –ù–æ –Ω–∞—à –º–æ–∑–≥, –Ω–∞—à–µ —Å–æ–∑–Ω–∞–Ω–∏–µ –∏ '
                          '–ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–µ–∫—Ä–∞—â–∞—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –º–µ—á—Ç–∞—Ç—å. '
                          '–ò —ç—Ç–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –Ω–∞—à–∏—Ö —Å–Ω–æ–≤–∏–¥–µ–Ω–∏—è—Ö.',
                     parse_mode='Markdown')
    bot.send_message(chat_id=msg.chat.id,
                     text='–ù–∞–ø–∏—à–∏—Ç–µ *–æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º* —Ç–µ–º–∞—Ç–∏–∫—É —Å–Ω–∞ üëá\n'
                          '*–ù–∞–ø—Ä–∏–º–µ—Ä:* —Å–∞–¥',
                     parse_mode='Markdown')


# —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞—è –æ —Å–Ω–µ –ø–æ —É—Ç—Ä–∞–º
def job():
    bot.send_message(chat_id=info.chat, text='–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Å–Ω–∏–ª–æ—Å—å? üôÇ',
                     parse_mode='Markdown')


# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
@bot.message_handler(func=lambda message: message.text in ['–î–∞', '–ù–µ—Ç', '–¥–∞', '–Ω–µ—Ç'])
def reminder(msg):
    if msg.text.lower() == '–¥–∞':
        # –≤–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ 9:30 —É—Ç—Ä–∞
        resp = True
        info.reminder(msg.chat.id, resp)
        schedule.every().day.at("09:30").do(job)

        bot.send_message(chat_id=msg.chat.id, text='–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã!\n',
                         parse_mode='Markdown')
        bot.send_message(chat_id=msg.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ *—Å–ª–æ–≤–æ* –Ω–∏–∂–µ üëá',
                         parse_mode='Markdown')
    else:
        resp = False
        info.reminder(msg.chat.id, resp)
        bot.send_message(chat_id=msg.chat.id, text='–û—á–µ–Ω—å –∂–∞–ª—å üò¢\n'
                                                   '–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "*–î–∞*"',
                         parse_mode='Markdown')
        bot.send_message(chat_id=msg.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ *—Å–ª–æ–≤–æ* –Ω–∏–∂–µ üëá',
                         parse_mode='Markdown')

    while info.chatid[info.chat]:
        schedule.run_pending()
        time.sleep(1)


# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(content_types=["text"])
def get_text(msg):
    first_letter = msg.text[0].lower()

    get_info(dic[first_letter], msg.text.lower(), msg)  # —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Å—ã–ª–∫–æ–π


def get_info(letter, text, msg):
    ans = []  # –∫–æ–Ω–µ—á–Ω—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–±–∏—Ä–∞—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Ç–µ–∫—Å—Ç –ø–æ–¥ –Ω–∏–º–∏
    txt = ''  # —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç—É–ø–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    request = requests.get(url=f'http://sonnik.favorites.com.ua/vse-sonniki/{letter}/')  # –∑–∞—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç
    soup = bs(request.content, 'html.parser')

    words = {}  # —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–±–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤

    # —Å–±–æ—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –±—É–∫–≤—ã
    for elem in soup.find('div', {'id': 'words'}):
        try:
            words[elem.text] = elem.get('href')
        except Exception:
            continue

    try:
        # –ø—Ä–æ–±—É–µ–º –∑–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–ª–æ–≤–æ–º: –µ—Å–ª–∏ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ—Ç—Å—è –≤ —Å–ª–æ–≤–∞—Ä–µ, —Ç–æ –æ–± —ç—Ç–æ–º –±—É–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–æ
        son = requests.get(url=f'http://sonnik.favorites.com.ua/vse-sonniki/{letter}/{words[text]}')
        another_soup = bs(son.content, 'html.parser')

        name = []  # —Å–ø–∏—Å–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        texts = []  # —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤ –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏

        # —Å–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å —Å–∞–π—Ç–∞
        txt += '*' + str(another_soup.find('h3').text.capitalize()) + '*' + '\n'
        txt += str(another_soup.find('p').text) + '\n\n'

        for i in another_soup.find_all('h2'):
            name.append(i.text)
        for j in another_soup.find_all('p')[1:-1]:
            q = j.text.replace('\xa0', '').split('. ')
            a = '. '.join(q)
            texts.append(a[0].upper() + a[1:])

        try:
            # –µ—Å–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –µ—Å—Ç—å "–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ", –æ–±—Ä–∞–±–æ—Ç–∞–µ–º —ç—Ç–æ
            if texts[0].lower() == '–∞–ª—å–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ:' or texts[0].lower() == '–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ:':
                txt += '*–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ:*\n'
                del texts[0]

                txt += str(texts[0]) + '\n\n'
                del texts[0]
        except Exception:
            pass

        # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç–∞–º–∏
        for n, t in zip(name, texts):
            ans.append(f"*{n}*\n{t}\n")

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è: –µ—Å–ª–∏ –æ–Ω–æ –º–µ–Ω—å—à–µ 4096 –∑–Ω–∞–∫–æ–≤ => –¥–æ–±–∞–≤–∏–º –≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ `ans`
        n = 0
        while len(txt) + len(str(ans[n]) + '\n') < 4096:
            txt += str(ans[n]) + '\n'
            if n == len(ans) - 1:
                break
            else:
                n += 1

        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º
        bot.send_message(chat_id=msg.chat.id, text=txt, parse_mode='Markdown')

        # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±—ã–ª–æ –ø–µ—Ä–≤–æ–µ, —Å–ø—Ä–æ—Å–∏–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö (–Ω—É–∂–Ω–æ –∏–ª–∏ –Ω–µ—Ç)
        if not info.status[msg.chat.id]:
            info.status[msg.chat.id] = True
            bot.send_message(chat_id=msg.chat.id, text='–•–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞—è –ø–æ —É—Ç—Ä–∞–º?\n'
                                                       '–í –æ—Ç–≤–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ: *–î–∞* –∏–ª–∏ *–ù–µ—Ç*',
                             parse_mode='Markdown')
        else:  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–µ—Ä–≤–æ–µ, —Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –Ω–µ –±—É–¥–µ–º
            bot.send_message(chat_id=msg.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ *—Å–ª–æ–≤–æ* –Ω–∏–∂–µ üëá', parse_mode='Markdown')

    except Exception as e:
        print(e)
        bot.send_message(chat_id=msg.chat.id, text='–°–ª–æ–≤–∞ –Ω–µ –Ω–∞—à–ª–æ—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ')


bot.polling(none_stop=True)
